

TCP (Transmission Control Protocol) is one of the main protocols of the Internet protocol suite. It lies between the Application and Network Layers which are used in 
providing reliable delivery services. It is a connection-oriented protocol for communications that helps in the exchange of messages between different devices over a network. 
The Internet Protocol (IP), which establishes the technique for sending data packets between computers, works with TCP. 

TCP keeps track of the segments being transmitted or received by assigning numbers to every single one of them.
Flow control limits the rate at which a sender transfers data. This is done to ensure reliable delivery.
TCP implements an error control mechanism for reliable data transfer.
TCP takes into account the level of congestion in the network.

Advantages of TCP
It is reliable for maintaining a connection between Sender and Receiver.
It is responsible for sending data in a particular sequence.
Its operations are not dependent on OS.
It allows and supports many routing protocols.
It can reduce the speed of data based on the speed of the receiver.

Disadvantages of TCP
It is slower than UDP and it takes more bandwidth.
Slower upon starting of transfer of a file.
Not suitable for LAN and PAN Networks.
It does not have a multicast or broadcast category.
It does not load the whole page if a single data of the page is missing.

User Datagram Protocol (UDP) is a Transport Layer protocol. UDP is a part of the Internet Protocol suite, referred to as the UDP/IP suite. Unlike TCP, 
it is an unreliable and connectionless protocol. So, there is no need to establish a connection before data transfer. The UDP helps to establish low-latency 
and loss-tolerating connections establish over the network. The UDP enables process-to-process communication.

Features of UDP
Used for simple request-response communication when the size of data is less and hence there is lesser concern about flow and error control.
It is a suitable protocol for multicasting as UDP supports packet switching.
UDP is used for some routing update protocols like RIP(Routing Information Protocol).
Normally used for real-time applications which can not tolerate uneven delays between sections of a received message.

Advantages of UDP
It does not require any connection for sending or receiving data.
Broadcast and Multicast are available in UDP.
UDP can operate on a large range of networks.
UDP has live and real-time data.
UDP can deliver data if all the components of the data are not complete.

Disadvantages of UDP
We can not have any way to acknowledge the successful transfer of data.
UDP cannot have the mechanism to track the sequence of data.
UDP is connectionless, and due to this, it is unreliable to transfer data.
In case of a Collision, UDP packets are dropped by Routers in comparison to TCP.
UDP can drop packets in case of detection of errors.

Which Protocol is Better: TCP or UDP?
The answer to this question is difficult because it totally depends on what work we are doing and what type of data is being delivered. UDP is better in the case of 
online gaming as it allows us to work lag-free. TCP is better if we are transferring data like photos, videos, etc. because it ensures that data must be correct has 
to be sent.

In general, both TCP and UDP are useful in the context of the work assigned by us. Both have advantages upon the works we are performing, that’s why it is 
difficult to say, which one is better.

HTTP stands for HyperText Transfer Protocol.

HTTP provides a standard between a web browser and a web server to establish communication. It is a set of rules for transferring data from one computer to another. 
Data such as text, images, and other multimedia files are shared on the World Wide Web. Whenever a web user opens their web browser, the user indirectly uses HTTP. 
It is an application protocol that is used for distributed, collaborative, hypermedia information systems. 


HTTP Request
HTTP request is simply termed as the information or data that is needed by Internet browsers for loading a website. This is simply known as HTTP Request.

There is some common information that is generally present in all HTTP requests. These are mentioned below.

HTTP Version 
URL
HTTP Method
HTTP Request Headers

HTTP Request Headers
HTTP Request Headers generally store information in the form of key-value and must be present in each HTTP Request. The use of this Request Header is to provide core 
information about the client’s information, etc.

HTTP Request Body
HTTP Request Body simply contains the information that has to be transferred. HTTP Request has the information or data to be sent to these browsers. 

HTTP Method
HTTP Methods are simply HTTP Verb. In spite of being present so many HTTP Methods, the most common HTTP Methods are HTTP GET and HTTP POST. These two are 
generally used in HTTP cases. In HTTP GET, the information is received in the form of a website.


HTTP Response
HTTP Response is simply the answer to what a Server gets when the request is raised. There are various things contained in HTTP Response, some of them are listed below.

HTTP Status Code
HTTP Headers
HTTP Body

HTTP Response Headers
HTTP Response headers are simply like an HTTP Request where it has that work to send some important files and data to the HTTP Response Body.

HTTP Response Body
HTTP Responses are the responses that are received successfully upon the request. Generally, it comes under the requests generated by the web. In most cases, 
the request is of transferring the HTML data into a webpage.

HTTP Status Code
HTTP Status Codes are the 3-Digit codes that tell the message or simply tell us about the HTTP Request whether it has been completed or not. There are simply 5 types of status codes.

Informational
Successful
Re-directional 
Client-Error
Server-Error

Characteristics of HTTP
HTTP is IP based communication protocol that is used to deliver data from server to client or vice-versa. 

The server processes a request, which is raised by the client, and also server and client know each other only during the current bid and response period. 
Any type of content can be exchanged as long as the server and client are compatible with it. 
Once data is exchanged, servers and clients are no longer connected. 
It is a request and response protocol based on client and server requirements. 
It is a connection-less protocol because after the connection is closed, the server does not remember anything about the client and the client does not remember anything 
about the server. 
It is a stateless protocol because both client and server do not expect anything from each other but they are still able to communicate. 

Advantages of HTTP
Memory usage and CPU usage are low because of fewer simultaneous connections.
Since there are few TCP connections hence network congestion is less.
Since handshaking is done at the initial connection stage, then latency is reduced because there is no further need for handshaking for subsequent requests.
The error can be reported without closing the connection.
HTTP allows HTTP pipe-lining of requests or responses.

Disadvantages of HTTP
HTTP requires high power to establish communication and transfer data.
HTTP is less secure because it does not use any encryption method like HTTPS and use TLS to encrypt regular HTTP requests and response.
HTTP is not optimized for cellular phones and it is too gabby.
HTTP does not offer a genuine exchange of data because it is less secure.
The client does not close the connection until it receives complete data from the server; hence, the server needs to wait for data completion and cannot be available 
for other clients during this time.


Websocket Connection

Client  1)Request---> Server  
       2)<---Handshake  
        3) <---> Websocket

WebSocket is a bidirectional communication protocol that can send data from the client to the server or from the server to the client by reusing the 
established connection channel. The connection is kept alive until terminated by either the client or the server.

Almost all real-time applications like (trading, monitoring, and notification) services use WebSocket to receive the data on a single communication channel.
